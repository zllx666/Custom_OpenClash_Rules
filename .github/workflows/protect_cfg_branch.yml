name: Protect CFG Directory Branch

on:
  push:
    paths:
      - 'cfg/**'

jobs:
  check-and-block:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check if push is from GitHub Actions or repository owner
        id: check-actor
        run: |
          # Get the list of changed cfg files
          changed_cfg_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^cfg/" || echo "")
          
          # Check if only Custom_Clash_Full.ini is being modified
          if [[ "$changed_cfg_files" == "cfg/Custom_Clash_Full.ini" ]]; then
            echo "is_allowed=true" >> $GITHUB_OUTPUT
            echo "reason=excluded_file" >> $GITHUB_OUTPUT
          elif [[ "${{ github.actor }}" == "github-actions[bot]" ]]; then
            echo "is_allowed=true" >> $GITHUB_OUTPUT
            echo "reason=github_actions" >> $GITHUB_OUTPUT
          elif [[ "${{ github.actor }}" == "Aethersailor" ]]; then
            echo "is_allowed=true" >> $GITHUB_OUTPUT
            echo "reason=repository_owner" >> $GITHUB_OUTPUT
          else
            echo "is_allowed=false" >> $GITHUB_OUTPUT
            echo "reason=unauthorized_user" >> $GITHUB_OUTPUT
          fi
          
          echo "Push author: ${{ github.actor }}"
          echo "Changed cfg files: $changed_cfg_files"
          echo "Is allowed: ${{ steps.check-actor.outputs.is_allowed }}"
          echo "Reason: ${{ steps.check-actor.outputs.reason }}"

      - name: Block unauthorized pushes
        if: steps.check-actor.outputs.is_allowed == 'false'
        run: |
          echo "🚫 Blocking push to ${{ github.ref }}"
          echo "Reason: Unauthorized user trying to modify /cfg directory"
          echo "Only GitHub Actions and repository owner can modify files in the /cfg directory"
          
          # Create a status check that will fail
          echo "## ❌ Push Blocked / 推送被阻止" > status.md
          echo "" >> status.md
          echo "This push has been automatically blocked because it contains modifications to files in the `/cfg` directory." >> status.md
          echo "此推送已被自动阻止，因为它包含对 `/cfg` 目录文件的修改。" >> status.md
          echo "" >> status.md
          echo "### Why was this blocked? / 为什么被阻止？" >> status.md
          echo "- Modifying `.ini` template files will affect all users' configured node options" >> status.md
          echo "- 修改 `.ini` 模板文件会影响所有用户已设置的节点选项" >> status.md
          echo "- Except for the Full template, other templates do not accept any PRs" >> status.md
          echo "- 除了 Full 模板以外，其他模板不接受任何 PR" >> status.md
          echo "- This ensures configuration integrity and prevents disruption to existing user setups" >> status.md
          echo "- 这确保了配置完整性并防止破坏现有用户设置" >> status.md
          echo "- Only GitHub Actions workflows and repository owner can modify these files" >> status.md
          echo "- 只有 GitHub Actions 工作流和仓库所有者可以修改这些文件" >> status.md
          echo "" >> status.md
          echo "### What should you do? / 你应该怎么做？" >> status.md
          echo "- If you need to modify configuration files, please fork and modify for your own use" >> status.md
          echo "- 如果你需要修改配置文件，请 fork 以后修改自用" >> status.md
          echo "- If you believe this block is in error, please contact the repository maintainers" >> status.md
          echo "- 如果你认为此阻止是错误的，请联系仓库维护者" >> status.md
          
          # Exit with error to fail the workflow
          exit 1

      - name: Allow authorized pushes
        if: steps.check-actor.outputs.is_allowed == 'true'
        run: |
          echo "✅ Allowing push to ${{ github.ref }}"
          echo "Reason: This push was created by ${{ steps.check-actor.outputs.reason }}"
          
          # Create a status check that will pass
          echo "## ✅ Push Allowed / 推送被允许" > status.md
          echo "" >> status.md
          if [[ "${{ steps.check-actor.outputs.reason }}" == "github_actions" ]]; then
            echo "This push has been automatically allowed because it was created by GitHub Actions." >> status.md
            echo "此推送已被自动允许，因为它是由 GitHub Actions 创建的。" >> status.md
            echo "" >> status.md
            echo "### Why was this allowed? / 为什么被允许？" >> status.md
            echo "- This push was created by a GitHub Actions workflow" >> status.md
            echo "- 此推送是由 GitHub Actions 工作流创建的" >> status.md
            echo "- Automated updates to `/cfg` directory are permitted" >> status.md
            echo "- 允许对 `/cfg` 目录进行自动化更新" >> status.md
            echo "- The changes are part of the automated configuration generation process" >> status.md
            echo "- 这些更改是自动化配置生成过程的一部分" >> status.md
          elif [[ "${{ steps.check-actor.outputs.reason }}" == "excluded_file" ]]; then
            echo "This push has been allowed because it only modifies Custom_Clash_Full.ini." >> status.md
            echo "此推送已被允许，因为它只修改 Custom_Clash_Full.ini。" >> status.md
            echo "" >> status.md
            echo "### Why was this allowed? / 为什么被允许？" >> status.md
            echo "- Custom_Clash_Full.ini is excluded from protection rules" >> status.md
            echo "- Custom_Clash_Full.ini 被排除在保护规则之外" >> status.md
            echo "- This file can be modified by any user" >> status.md
            echo "- 任何用户都可以修改此文件" >> status.md
            echo "- Other /cfg directory files remain protected" >> status.md
            echo "- 其他 /cfg 目录文件仍然受到保护" >> status.md
          else
            echo "This push has been allowed because it was created by the repository owner." >> status.md
            echo "此推送已被允许，因为它是由仓库所有者创建的。" >> status.md
            echo "" >> status.md
            echo "### Why was this allowed? / 为什么被允许？" >> status.md
            echo "- This push was created by the repository owner" >> status.md
            echo "- 此推送是由仓库所有者创建的" >> status.md
            echo "- Repository owners have full access to modify files in this directory" >> status.md
            echo "- 仓库所有者拥有修改此目录文件的完全访问权限" >> status.md
            echo "- Manual modifications by the owner are permitted" >> status.md
            echo "- 允许所有者进行手动修改" >> status.md
          fi

      - name: Show Push Details
        run: |
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          echo "Author: ${{ github.actor }}"
          echo "Event: ${{ github.event_name }}"
          echo "Changed Files:"
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^cfg/" || echo "No cfg files changed" 